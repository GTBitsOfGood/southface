import { expect } from "@jest/globals";
import { readFileSync } from "fs";
import { cwd } from "process";
import { decodeSAMLResponse, validateSAMLResponse } from "./sso";

function readFixture(path) {
  return readFileSync(`${cwd()}/test/fixtures/${path}`).toString("utf-8");
}

describe("decodeSAMLResponse", () => {
  test("decoding valid encoded SAML response", () => {
    // Encoded SAML response. Generated by passing the raw SAML response
    // into https://www.samltool.com/encode.php
    // Note that NextJS handles URL decoding
    const encoded = readFixture("saml_response_encoded.txt");

    // Expected decoded SAML response
    // Pulled from https://www.samltool.com/generic_sso_res.php
    const expected = readFixture("saml_response.xml");

    expect(decodeSAMLResponse(encoded)).toEqual(expected);
  });
});

describe("validateSAMLResponse", () => {
  test("validate successful SAML response", () => {
    // SAML response pulled from https://www.samltool.com/generic_sso_res.php
    const samlResp = readFixture("saml_response.xml");

    expect(validateSAMLResponse(samlResp)).toEqual(true);
  });

  test("validate bad SAML response", () => {
    const samlResp = readFixture("bad_saml_response.xml");

    expect(validateSAMLResponse(samlResp)).toEqual(false);
  });
});
